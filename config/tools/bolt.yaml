tool_name: Bolt.new
format: enhanced_prompts
tone: technical_precise
framework: "Enhancement-driven development with WebContainer awareness"
preferred_use_cases:
  - rapid_prototyping
  - web_applications
  - javascript_projects
  - iterative_development
  - code_refinement
  - component_creation

prompting_strategies:
  enhanced:
    template: "Use ⭐ Enhance Prompt feature for: {detailed_specs_with_constraints}"
    use_cases: ["complex_applications", "production_ready", "full_featured"]
    effectiveness_score: 0.95
  incremental:
    template: "Step {n}: {specific_change} without affecting {preserved_elements}"
    use_cases: ["targeted_modifications", "safe_updates"]
    effectiveness_score: 0.9
  file_targeted:
    template: "Right-click target files: {files}. Request: {change_description}"
    use_cases: ["precise_modifications", "multi_file_coordination"]
    effectiveness_score: 0.85

optimization_tips:
  - "Use enhance prompt feature for complex requests"
  - "Target specific files to avoid unintended changes"
  - "Lock critical files that shouldn't be modified"
  - "Break complex features into incremental steps"
  - "Use Inspector mode for UI element changes"
  - "Reset context with summarization for long sessions"
  - "Be explicit about file preservation vs changes"

constraints:
  - "WebContainer environment limitations"
  - "Browser-compatible code only"
  - "No native binary execution"
  - "JavaScript/TypeScript/WebAssembly focus"
  - "Limited Python (standard library only)"

webcontainer_considerations:
  - "No pip support for Python packages"
  - "Cannot run system-level operations"
  - "Browser-based Node.js runtime"
  - "Focus on web-compatible solutions"

file_management:
  target_files: "Right-click → Target file"
  lock_files: "Right-click → Lock file"
  exclude_directories: "Right-click → Lock all"
  code_sections: "Highlight code → Ask Bolt"
  ui_elements: "Inspector mode → Click element"

troubleshooting:
  incomplete_tasks:
    - "Break into smaller incremental changes"
    - "Verify each step before proceeding"
    - "Focus on one feature at a time"
  context_loss:
    - "Summarize conversation progress"
    - "Reset context window strategically"
    - "Maintain key decision points"

few_shot_examples:
  - input: "Todo app"
    output: "Create a React todo application with TypeScript, featuring task creation, editing, deletion, and filtering. Include local storage persistence, responsive design with Tailwind CSS, and accessibility features. Implement proper state management and error handling."
  
  - input: "User dashboard"
    output: "Build a comprehensive user dashboard with React and TypeScript, including user profile display, activity feed, statistics widgets, and navigation sidebar. Implement responsive grid layout with Tailwind CSS, loading states, and proper TypeScript interfaces for all data structures."
